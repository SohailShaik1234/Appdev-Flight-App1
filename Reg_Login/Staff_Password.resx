<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAEg9JREFUeF7t
        3b/rr3d5x/FkqEpREIQoCEKrLp2kpou4iD9qu4hQQWzVqYvgYIkuCk5u/thE6FLaaLT6D5gGF6VLTZZC
        l6qLQ6uLaAKF1F/XrSeaHO+c8/1xfT6f+3q/Hg94Qjick+Hk/n7uV05OrvMAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAtPFh97k7b
        XwMAi/uj6svVr+706J1vAwAW9Yrq8eq5l/9zbd/28goAWMxD1ZPV3S//5/putX0fAGARb6i+V+29+J/f
        9n1eXwEAw725+lG198Lfa/u+248BAIZ6V/V0tfeiv1fbj3lnBQAM87fVs9XeC/4qbT/2AxUAMMQj1S+r
        vRf7ddr+Hv9QAQAH9tyBn72X+W1yMAgADuol1fMP/HTnYBAAHMx24Offqr0Xd2cOBgHAQdzvwE93DgYB
        wIVd9cBPdw4GAcCFXPfAT3cOBgHAmd30wE93DgYBwJnc9sBPdw4GAcCJdR346c7BIAA4gVMd+OnOwSAA
        aHLqAz/dORgEALd0rgM/3TkYBAA39OrqnAd+unMwCACuaTvw8/1q78U6KQeDAOCKLn3gpzsHgwDgPo5y
        4Kc7B4MA4EUc7cBPdw4GAcBdjnrgpzsHgwCgTDnw052DQQDEmnbgpzsHgwCIM/XAT3cOBgEQY/qBn+4c
        DAJgeasc+OnOwSAAlvVwtdKBn+4cDAJgOase+OnOwSAAlvF31coHfrpzMAiA8VIO/HTnYBAAI6Ue+OnO
        wSAAxkg/8NOdg0EAHJ4DP6fJwSAADsuBn9PmYBAAh+PAz3lyMAiAw3Dg57z9b/XnFQBcjAM/l8nBIAAu
        xoGfy+ZgEABn58DPMXIwCICzcODnmDkYBMDJbAd+vlLtvYB0+RwMAqCdAz8zcjAIgDYO/MzKwSAAbs2B
        n5k5GATAjTnwMzsHgwC4Ngd+1sjBIACuzIGftXIwCID7cuBnzRwMAmCXAz8ZORgEwO848JOVg0EAOPAT
        2jcrB4MAQjnwk52DQQCBHPjRloNBAEG2Az8/rvZeCMrLwSCAAA78aC8HgwAW5sCP7pWDQQALcuBHV8nB
        IIBFOPCjm+RgEMBgDvzoNjkYBDCQAz/qyMEggEEc+FFnDgYBDODAj06Rg0EAB+bAj06Zg0EAB/SXlQM/
        OnUOBgEciAM/OmcOBgEcgAM/ukQOBgFciAM/OkKfrRwMAjgTB350pBwMAjgDB350xBwMAjghB3505BwM
        AjgBB340IQeDABo58KNJORgE0MCBH03MwSCAW3DgR5NzMAjgBj5eOfCj6TkYBHBF21GVz1d7H6bS1BwM
        ArgHB360cg4GAexw4EcJORgE8DwO/CgpB4MAigM/SszBICCaAz9KzsEgIJIDP5KDQUAYB36k3+dgEBDB
        gR/pD3MwCFiWAz/S/XMwCFiKAz/S1XMwCFiCAz/S9XMwCBhtO/DzVLX3ASfp3jkYBIzkwI90+xwMAkZx
        4Efqy8EgYAQHfqT+HAwCDs2BH+l0ORgEHJIDP9LpczAIOAwHfqTz52AQcFEO/EiXy8Eg4CIc+JEun4NB
        wFk58CMdJweDgLNw4Ec6Xg4GASflwI903BwMAk5iO/DzTLX3wSPpGP2sekcF0MKBH2lODgYBLRz4kebl
        YBBwYw78SPNzMAi4Fgd+pHVyMAi4Egd+pPVyMAi4Jwd+pHVzMAjY5cCPtH4OBgEv4MCPlJODQcBvOPAj
        5eVgEIRz4EfKzcEgCOXAjyQHgyCIAz+S7s7BIFjcduDnsWrvA0BSdg4GwaIc+JF0vxwMgsU48CPpqv1H
        5WAQLMCBH0nX7b+rP62AoRz4kXTTHAyCoRz4kXTbHAyCYRz4kdSVg0EwhAM/krpzMAgOzIEfSafOwSA4
        GAd+JJ0rB4PgILYDP09Ue1+oknSKHAyCC3PgR9KlcjAILuSNlQM/ki6Zg0FwZg78SDpKDgbBmTjwI+lo
        ORgEJ+bAj6Sj5mAQnIgDP5KOnoNB0MiBH0nTcjAIbsmBH0lT+5fKwSC4AQd+JE3PwSC4Jgd+JK2Sg0Fw
        RQ78SFotB4PgPhz4kbRqDgbBi3DgR9LqORgEd/lg5cCPpIQcDII7HPiRlJaDQURz4EdSeg4GEceBH0n6
        bQ4GEcOBH0l6YQ4GsTwHfiRpPweDWJYDP5J07xwMYjkO/EjS1XIwiGU48CNJ18vBIMZz4EeSbpaDQYz1
        icqBH0m6edtn6McqGGE7avGFau9hliRdPweDODwHfiTpNDkYxGE58CNJp83BIA7HgR9JOk8OBnEYDvxI
        0nlzMIiLc+BHki6Tg0FcjAM/knTZHAzi7Bz4kaRj5GAQZ+PAjyQdKweDOCkHfiTp2DkYRDsHfiRpRg4G
        0caBH0malYNB3NprKgd+JGleDgZxY9uBnx9Uew+WJOn4ORjEtTnwI0lr5GAQV+bAjyStlYNB3JcDP5K0
        Zg4G8aIc+JGktXMwiBdw4EeSsnIwCAd+JCk0B4OCOfAjSdk5GBTIgR9J0paDQUEc+JEkPT8HgwL8ReXA
        jyTp7hwMWti7Kwd+JEkvloNBC3LgR5J0lRwMWogDP5Kk6+Rg0HAO/EiSbpODQQM58CNJ6sjBoEEc+JEk
        deZg0AAO/EiSTpGDQQfmwI8k6ZQ5GHRADvxIks6Rg0EH4sCPJOmcORh0AA78SJIukYNBF+TAjyTpkjkY
        dGYO/EiSjpSDQWewHfj5arX3D0CSpEvlYNAJOfAjSTpyDgbxwDeqvYdDknT9tl/5hREMAEnqywBgDANA
        kvoyABjDAJCkvgwAxjAAJKkvA4AxDABJ6ssAYAwDQJL6MgAYwwCQpL4MAMYwACSpLwOAMQwASerLAGAM
        A0CS+jIAGMMAkKS+DADGMAAkqS8DgDEMAEnqywBgDANAkvoyABjDAJCkvgwAxjAAJKkvA4AxDABJ6ssA
        YAwDQJL6MgAYwwCQpL4MAMYwACSpLwOAMQwASerLAGAMA0CS+jIAGMMAkKS+DADGMAAkqS8DgDEMAEnq
        ywBgDANAkvoyABjDAJCkvgwAxjAAJKkvA4AxDABJ6ssAYAwDQJL6MgAYwwCQpL4MAMYwACSpLwOAMQwA
        SerLAGAMA0CS+jIAGMMAkKS+DADGMAAkqS8DgDEMAEnqywBgDANAkvoyABjDAJCkvgwAxjAAJKkvA4Ax
        DABJ6ssAYAwDILvvVNsHlvr692rv51oZbc8AjGAAZPc3Fb3eX+39XCsjA4AxDIDsDIB+BkB2BgBjGADZ
        GQD9DIDsDADGMACyMwD6GQDZGQCMYQBkZwD0MwCyMwAYwwDIzgDoZwBkZwAwhgGQnQHQzwDIzgBgDAMg
        OwOgnwGQnQHAGAZAdgZAPwMgOwOAMQyA7AyAfgZAdgYAYxgA2RkA/QyA7AwAxjAAsjMA+hkA2RkAjGEA
        ZGcA9DMAsjMAGMMAyM4A6GcAZGcAMIYBkJ0B0M8AyM4AYAwDIDsDoJ8BkJ0BwBgGQHYGQD8DIDsDgDEM
        gOwMgH4GQHYGAGMYANkZAP0MgOwMAMYwALIzAPoZANkZAIxhAGRnAPQzALIzABjDAMjOAOhnAGRnADCG
        AZCdAdDPAMjOAGAMAyA7A6CfAZCdAcAYBkB2BkA/AyA7A4AxDIDsDIB+BkB2BgBjGADZGQD9DIDsDADG
        MACyMwD6GQDZGQCMYQBkZwD0MwCyMwAYwwDIzgDoZwBkZwAwhgGQnQHQzwDIzgBgDAMgOwOgnwGQnQHA
        GAZAdgZAPwMgOwOAMQyA7AyAfgZAdgYAYxgA2RkA/QyA7AwAxjAAsjMA+hkA2RkAjGEAZGcA9DMAsjMA
        GMMAyM4A6GcAZGcAMIYBkJ0B0M8AyM4AYAwDIDsDoJ8BkJ0BwBgGQHYGQD8DIDsDgDEMgOwMgH4GQHYG
        AGMYANkZAP0MgOwMAMYwALIzAPoZANkZAIxhAGRnAPQzALIzABjDAMjOAOhnAGRnADCGAZCdAdDPAMjO
        AGAMAyA7A6CfAZCdAcAYBkB2BkA/AyA7A4AxDIDsDIB+BkB2BgBjGADZGQD9DIDsDADGMACyMwD6GQDZ
        GQCMYQBkZwD0MwCyMwAYwwDIzgDoZwBkZwAwhgGQnQHQzwDIzgBgDAMgOwOgnwGQnQHAGAZAdgZAPwMg
        OwOAMQyA7AyAfgZAdgYAYxgA2RkA/QyA7AwAxjAAsjMA+hkA2RkAjGEAZGcA9DMAsjMAGMMAyM4A6GcA
        ZGcAMIYBkJ0B0M8AyM4AYAwDIDsDoJ8BkJ0BwBgGQHYGQD8DIDsDgDEMgOwMgH4GQHYGAGMYANkZAP0M
        gOwMAMYwALIzAPoZANkZAIxhAGRnAPQzALIzABjDAMjOAOhnAGRnADCGAZCdAdDPAMjOAGAMAyA7A6Cf
        AZCdAcAYBkB2BkA/AyA7A4AxDIDsDIB+BkB2BgBjGADZGQD9DIDsDADGMACyMwD6GQDZGQCMYQBkZwD0
        MwCyMwAYwwDIzgDoZwBkZwAwhgGQnQHQzwDIzgBgDAMgOwOgnwGQnQHAGAZAdgZAPwMgOwOAMQyA7AyA
        fgZAdgYAYxgA2RkA/QyA7AwAxjAAsjMA+hkA2RkAjGEAZGcA9DMAsjMAGMMAyM4A6GcAZGcAMIYBkJ0B
        0M8AyM4AYAwDIDsDoJ8BkJ0BwBgGQHYGQD8DIDsDgDEMgOwMgH4GQHYGAGMYANkZAP0MgOwMAMYwALIz
        APoZANkZAIxhAGRnAPQzALIzABjDAMjOAOhnAGRnADCGAZCdAdDPAMjOAGAMAyA7A6CfAZCdAcAYBkB2
        BkA/AyA7A4AxDIDsDIB+BkB2BgBjGADZGQD9DIDsDADGMACyMwD6GQDZGQCMYQBkZwD0MwCyMwAYwwDI
        zgDoZwBkZwAwhgGQnQHQzwDIzgBgDAMgOwOgnwGQnQHAGAZAdgZAPwMgOwOAMQyA7AyAfgZAdgYAYxgA
        2RkA/QyA7AwAxjAAsjMA+hkA2RkAjGEAZGcA9DMAsjMAGMMAyM4A6GcAZGcAMIYBkJ0B0M8AyM4AYAwD
        IDsDoJ8BkJ0BwBgGQHYGQD8DIDsDgDEMgOwMgH4GQHYGAGMYANkZAP0MgOwMAMYwALIzAPoZANkZAIxh
        AGRnAPQzALIzABjDAMjOAOhnAGRnADCGAZCdAdDPAMjOAGAMAyA7A6CfAZCdAcAYBkB2BkA/AyA7A4Ax
        DIDsDIB+BkB2BgBjGADZGQD9DIDsDADGMACyMwD6GQDZGQCMYQBkZwD0MwCyMwAYwwDIzgDoZwBkZwAw
        hgGQnQHQzwDIzgBgjK9Xew+xMjIA+hkA2T1WwQjbw7r3ECsjA6CfAZDdP1cwwj9Wew+xMjIA+hkA2X2x
        ghE+U+09xMrIAOhnAGT36QpG+Ptq7yFWRgZAPwMguw9XMMJbqr2HWBkZAP0MgOwermCEP66erfYeZK2f
        AdDPAMjt/6qXVjDGt6u9h1nrZwD0MwBye6KCUR6p9h5mrZ8B0M8AyO2jFYzy2urn1d4DrbUzAPoZAJlt
        /yn1oQrGcREwMwOgnwGQ2aMVjPSm6pfV3oOtdTMA+hkAeW2/gvpnFYz1T9Xew611MwD6GQB5famC0V5V
        /U+194BrzQyAfgZAVj+sXlnBeG+r/r/ae9C1XgZAPwMgp+03/r21gmU4D5yTAdDPAMho+z1TH6pgOR+p
        flHtPfhaJwOgnwGwfttv+tv+RQmW9Z7qp9XeF4DWyADoZwCs3U+qv65geX9Sfava+0LQ/AyAfgbAuj1e
        va6CKO+r/qva+6LQ3AyAfgbAev1n9d4KYj1Y/VX1r9Uz1d4XimZlAPQzANbo6eqx6l3V9tkH3PGy6u3V
        p6ptEDxVbTcEtj8O00XBORkA/QyAOW2fVdtn1vbZ9WT1teqT1fa/Q/tjfQEAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACW88ADvwYrjjDa
        OpL8TQAAAABJRU5ErkJggg==
</value>
  </data>
</root>